group 'uparis'
version '1.0-SNAPSHOT'
apply {
    plugin 'application'
}

mainClassName = 'upariscommonmarkjava.SsgMain'

dependencies {
    implementation project(':md2html')
    implementation project(':buildsite')
    implementation project(':http_serv')
}

def outputDir= "${projectDir}/bin"
def zipFile = file("${buildDir}/distributions/ssg-${version}.zip")

task deploy (dependsOn: distZip) {
    inputs.file zipFile
    outputs.dir outputDir

    doLast {
        copy {
            from zipFile
            into outputDir
        }
    }
}
run{
    standardInput = System.in
}
allprojects {
    repositories {
        mavenCentral()
        jcenter()
    }
    apply plugin: "java"
    apply plugin: "jacoco"
    apply plugin: "idea"

    dependencies {
        testImplementation(platform('org.junit:junit-bom:5.7.0'))
        testImplementation 'org.junit.jupiter:junit-jupiter'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
        implementation 'org.nanohttpd:nanohttpd:2.3.1'
        implementation'org.nanohttpd:nanohttpd-webserver:2.3.1'
        implementation 'org.commonmark:commonmark:0.17.1'
        implementation 'org.commonmark:commonmark-ext-gfm-tables:0.17.1'
        implementation 'org.commonmark:commonmark-ext-yaml-front-matter:0.17.1'
        implementation 'org.tomlj:tomlj:1.0.0'
        implementation 'commons-cli:commons-cli:1.4'
        implementation 'org.projectlombok:lombok:1.18.18'
        annotationProcessor 'org.projectlombok:lombok:1.18.18'
        testImplementation 'org.projectlombok:lombok:1.18.18'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.18'

        implementation 'nu.validator:validator:20.6.30'
        testImplementation 'nu.validator:validator:20.6.30'

        implementation 'org.asciidoctor:asciidoctorj:2.4.3'
        testImplementation 'org.asciidoctor:asciidoctorj:2.4.3'
    }
    tasks.named('test') {
        useJUnitPlatform()
        //This avoids StackOverflowException during Jacoco report
        jacoco {
            excludes = ['com.thaiopensource.relaxng.impl.*',
                        'upariscommonmarkjava.http_serv/HttpMain.java',
                        'upariscommonmarkjava.http_serv.implementations.dto.**',
                        'upariscommonmarkjava.http_serv.implementations.server.ServerHandler',
                        'upariscommonmarkjava.http_serv.implementations.server.ServerInitializer',
                        'upariscommonmarkjava.http_serv.implementations.server.SsgServer',
                        'upariscommonmarkjava.http_serv.implementations.server.UtilConstants']
        }
        finalizedBy jacocoTestReport
    }

    task codeCoverageReport(type: JacocoReport) {

        executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

        subprojects.each {
            sourceSets it.sourceSets.main
        }
        reports {
            xml.enabled true
            xml.destination file("${buildDir}/reports/jacoco/report.xml")
            html.enabled false
            csv.enabled false
        }
    }
    codeCoverageReport.dependsOn { test }
    
}
